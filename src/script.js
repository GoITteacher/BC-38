// ===================
/* 
Example 1 - –ë–∞–∑–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å –º–∞—Å—Å–∏–≤–æ–º
–°–æ–∑–¥–∞–π—Ç–µ –º–∞—Å—Å–∏–≤ genres —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ ¬´Jazz¬ª –∏ ¬´Blues¬ª.
–î–æ–±–∞–≤—å—Ç–µ ¬´–†–æ–∫-–Ω-—Ä–æ–ª–ª¬ª –≤ –∫–æ–Ω–µ—Ü.
–í—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞.
–í—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞. –ö–æ–¥ –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å –¥–ª—è –º–∞—Å—Å–∏–≤–∞ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–π –¥–ª–∏–Ω—ã.
–£–¥–∞–ª–∏—Ç–µ –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –∏ –≤—ã–≤–µ–¥–∏—Ç–µ –µ–≥–æ –≤ –∫–æ–Ω—Å–æ–ª—å.
–í—Å—Ç–∞–≤—å—Ç–µ ¬´Country¬ª –∏ ¬´Reggae¬ª –≤ –Ω–∞—á–∞–ª–æ –º–∞—Å—Å–∏–≤–∞.
*/

// const genres = ['Jazz', 'Blues'];
// genres.push('–†–æ–∫-–Ω-—Ä–æ–ª–ª');
// console.log(genres[0]);
// console.log(genres[genres.length - 1]);
// console.log(genres.shift());
// console.log(genres.unshift('Country', 'Reggae'));
// console.log(genres);

// ================

/* 
–ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –ø–ª–æ—â–∞–¥–∏ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞ —Å–æ —Å—Ç–æ—Ä–æ–Ω–∞–º–∏, –∑–Ω–∞—á–µ–Ω–∏—è –∫–æ—Ç–æ—Ä—ã—Ö —Ö—Ä–∞–Ω—è—Ç—Å—è –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π values –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏. –ó–Ω–∞—á–µ–Ω–∏—è –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ —Ä–∞–∑–¥–µ–ª–µ–Ω—ã –ø—Ä–æ–±–µ–ª–æ–º.
*/

// const values = '8 11 10 2 43 65';

// let newArr = values.split(' ');
// console.log(newArr);
// let sqareSquare = 1;
// for (let elem of newArr) {
//   console.log(elem);
//   sqareSquare *= Number(elem);
// }

// console.log(sqareSquare);

// =======================
/* 
–ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–±–æ—Ä–∞ –º–∞—Å—Å–∏–≤–∞ fruits —Ü–∏–∫–ª–æ–º for. –î–ª—è –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å—Å–∏–≤–∞ –≤—ã–≤–µ–¥–∏ –≤ –∫–æ–Ω—Å–æ–ª—å —Å—Ç—Ä–æ–∫—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ –Ω–æ–º–µ—Ä_—ç–ª–µ–º–µ–Ω—Ç–∞: –∑–Ω–∞—á–µ–Ω–∏–µ_—ç–ª–µ–º–µ–Ω—Ç–∞. –ù—É–º–µ—Ä–∞—Ü–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–æ–ª–∂–Ω–∞ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å 1.
*/

// const fruits = ['üçé', 'üçá', 'üçë', 'üçå', 'üçã'];
// for (let i = 0; i < fruits.length; i++) {
//   console.log(`${i + 1}: ${fruits[i]}`);
// }

// ==========================

/* 
–ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –∫–æ—Ç–æ—Ä—ã–π –≤—ã–≤–æ–¥–∏—Ç –≤ –∫–æ–Ω—Å–æ–ª—å –∏–º—è –∏ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω—ã–π –Ω–æ–º–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –í –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö names –∏ phones —Ö—Ä–∞–Ω—è—Ç—Å—è —Å—Ç—Ä–æ–∫–∏ –∏–º–µ–Ω –∏ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω—ã—Ö –Ω–æ–º–µ—Ä–æ–≤, —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã–µ –∑–∞–ø—è—Ç—ã–º–∏. –ü–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä –∏–º–µ–Ω –∏ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ –≤ —Å—Ç—Ä–æ–∫–∞—Ö —É–∫–∞–∑—ã–≤–∞—é—Ç –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–º–µ–Ω –∏ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ –æ–¥–∏–Ω–∞–∫–æ–≤–æ–µ.
*/

/* const names = 'Jacob,William,Solomon,Artemis';
const phones = '89001234567,89001112233,890055566377,890055566300';

const namesArr = names.split(',');
const phonesArr = phones.split(',');

console.log(namesArr, phonesArr);

for (let i = 0; i < namesArr.length; i++) {
  console.log(`${namesArr[i]} : ${phonesArr[i]}`);
} */

// ===========================

/* 
–ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –∫–æ—Ç–æ—Ä—ã–π –≤—ã–≤–æ–¥–∏—Ç –≤ –∫–æ–Ω—Å–æ–ª—å –≤—Å–µ —Å–ª–æ–≤–∞ —Å—Ç—Ä–æ–∫–∏ –∫—Ä–æ–º–µ –ø–µ—Ä–≤–æ–≥–æ –∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ. –†–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–∞—è —Å—Ç—Ä–æ–∫–∞ –Ω–µ –¥–æ–ª–∂–Ω–∞ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è –∏–ª–∏ –∑–∞–∫–∞–Ω—á–∏–≤–∞—Ç—å—Å—è –ø—Ä–æ–±–µ–ª—å–Ω—ã–º —Å–∏–º–≤–æ–ª–æ–º. –°–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å –¥–ª—è –ª—é–±–æ–π —Å—Ç—Ä–æ–∫–∏.
*/

// const string = 'Welcome to test the future';
// let strArr = string.split(' ');

// strArr = strArr.slice(1, -1);

// /* strArr.shift();
// strArr.pop(); */

// console.log(strArr);
// console.log(strArr.join(' '));

// ===================

/* –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –∫–æ—Ç–æ—Ä—ã–π ¬´—Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–µ—Ç¬ª —Å—Ç—Ä–æ–∫—É (–æ–±—Ä–∞—Ç–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫ –±—É–∫–≤) –∏ –≤—ã–≤–æ–¥–∏—Ç –µ–µ –≤ –∫–æ–Ω—Å–æ–ª—å. */

// let string = 'Welcome to the future';

// string = string.split('');

// for (let i = 0; i < string.length / 2; i++) {
//   const j = string.length - 1 - i;
//   const newx = string[i];
//   string[i] = string[j];
//   string[j] = newx;
// }

// for (let i = arr.length - 1; i > 0; i--) {
//   newArr.push(arr[i]);
// }

// for (let i = 0, j = arr.length - 1; i < arr.length / 2; i++, j--) {
//   let a = arr[i];
//   arr[i] = arr[j];
//   arr[j] = a;
// }

// console.log(string.join(''));

// ============================

// const langs = ['python123', 'python', 'c++', 'haskel', 'php', 'ruby'];
// debugger;
// for (let i = 0; i < langs.length; i++) {
//   for (let j = i; j < langs.length; j++) {
//     if (langs[i][0] > langs[j][0]) {
//       let temp = langs[i];
//       langs[i] = langs[j];
//       langs[j] = temp;
//     }
//   }
// }

// console.log(langs);

//= ================================
// const numbers = [2, 17, -94, 1, 23, 37];
// let min = numbers[0];

// for (let i = 0; i < numbers.length; i++) {
//   if (numbers[i] < min) {
//     min = numbers[i];
//   }
// }

// console.log(min); // 1

// ===================

// function sortByLength(langs) {
//   for (let i = 0; i < langs.length; i++) {
//     for (let j = i; j < langs.length; j++) {
//       if (langs[i].length > langs[j].length) {
//         let temp = langs[i];
//         langs[i] = langs[j];
//         langs[j] = temp;
//       }
//     }
//   }

//   return langs;
// }

// ===========================

// function removeSmallest(numbers) {
//   let min = numbers[0];

//   for (let i = 0; i < numbers.length; i++) {
//     if (numbers[i] < min) {
//       min = numbers[i];
//     }
//   }
//   numbers.splice(numbers.indexOf(min), 1);
//   return numbers;
// }

// =============================

// function dontGiveMeFive(start, end) {
//   let counter = 0;
//   for (let i = start; i <= end; i++) {
//     if (!i.toString().includes('5')) {
//       counter += 1;
//     }
//   }
//   return counter;
// }

// ============================

// function likeOrDislike(array) {
//   let result = 'Nothing';

//   for (const elem of array) {
//     if (elem !== result) {
//       result = elem;
//     } else {
//       result = `Nothing`;
//     }
//   }

//   return result;
// }

// likeOrDislike([Like, Dislike, Dislike]); // => Nothing - Like - Dislike

// =============================

// function reverse(array) {
//   let newM = [];

//   for (let i = array.length - 1; i >= 0; i -= 1) {
//     newM.push(array[i]);
//   }

//   return newM;
// }

// const result = reverse([1, 2, 3, 4, 5, 6, 7, 8, 9]);
// console.log(result);

// =============================

// const arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 11];

// for (let i = 0; i < arr.length - 1; i++) {
//   if (arr[i + 1] - arr[i] !== 1) {
//     console.log(arr[i + 1]);
//     break;
//   }
// }

// // [1, 2, 3, 4, 6, 7, 8, 9, 11]
// for (let i = 0; i < arr.length; i++) {
//   if (arr[0] + i !== arr[i]) {
//     console.log(arr[i]);
//     break;
//   }
// }

// =================================

// const arr = [1, 2, 3, 4, 5, 6, 1, 3, 4, 1, 4, 6, 7, 2, 4, 5];

// const arrNew = [];

// for (let elem of arr) {
//   if (!arrNew.includes(elem)) {
//     arrNew.push(elem);
//   }
// }

// console.log(arrNew);
